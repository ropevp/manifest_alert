===============================================================
              MANIFEST ALERT SYSTEM - CONFLUENCE DOCUMENTATION
===============================================================

OVERVIEW
--------
Professional warehouse alert system for shipping manifests with voice announcements 
and real-time synchronization. Built with PyQt6 framework for modern Windows integration.

QUICK DEPLOYMENT GUIDE
=====================

STEP 1: PREREQUISITES
- Install Python 3.9+ from python.org (check "Add Python to PATH")
- Install Git from git-scm.com

STEP 2: INSTALLATION 
- Download INSTALL.bat from GitHub: https://github.com/ropevp/manifest_alert
- Create target folder (e.g., C:\ManifestAlerts)
- Run INSTALL.bat in that folder
- Installer automatically creates desktop + Start Menu shortcuts

STEP 3: LAUNCH
- Use desktop shortcut "Manifest Alert System"
- Or Start Menu â†’ "Manifest Alert System" 
- Or Windows key + type "Manifest Alert"

TECHNICAL ARCHITECTURE
======================

FRAMEWORK STACK:
- GUI Framework: PyQt6 v6.8.1 (Qt6 modern framework)
- Audio System: Qt6 Multimedia with hardware acceleration
- Windows Integration: pywin32 v310 for native features
- File Management: winshell v0.6 for shortcut creation
- Text-to-Speech: pyttsx3 v2.90 with system voice engines

SYSTEM REQUIREMENTS:
- OS: Windows 10/11 (64-bit recommended)
- Python: 3.9+ (3.13 recommended)
- Memory: 50MB RAM (lightweight background operation)
- Storage: 150MB full installation with virtual environment
- Network: Optional (for multi-PC sync via shared folders)

KEY FEATURES
============

CORE FUNCTIONALITY:
âœ“ Real-time manifest monitoring with visual + audio alerts
âœ“ Multi-PC synchronization via shared folders (Google Drive, network shares)
âœ“ Professional voice announcements with text-to-speech integration
âœ“ User accountability tracking with custom names and timestamps
âœ“ Smart snooze functionality with true window management
âœ“ System tray integration for background operation

UI/UX ENHANCEMENTS:
âœ“ Enhanced display with 44% larger fonts for warehouse visibility
âœ“ Multi-monitor support with direct monitor selection
âœ“ Complete system tray menu for all functions
âœ“ Windows taskbar integration with professional appearance
âœ“ Automatic desktop and Start Menu shortcut creation

ALERT SYSTEM:
âœ“ ðŸŸ¢ Open Manifests: Scheduled but not yet active (green background)
âœ“ ðŸ”´ Active Manifests: Current time matches schedule (red, audio alerts)
âœ“ ðŸŸ  Missed Manifests: Past due and unacknowledged (orange, urgent alerts)

INSTALLATION SYSTEM
===================

FRESH INSTALLATION PROCESS:
[1/4] Prerequisites check (Python + Git validation)
[2/4] Download from GitHub repository
[3/4] Virtual environment + dependency installation  
[4/4] Desktop shortcut creation (NEW!)

UPDATE PROCESS:
[1/4] Settings backup (preserves user configuration)
[2/4] Download latest version from GitHub
[3/4] Update dependencies to compatible versions
[4/4] Refresh desktop shortcuts (NEW!)

AUTO-CREATED SHORTCUTS:
- Desktop: "Manifest Alert System.lnk" 
- Start Menu: "Manifest Alert System.lnk"
- Target: launch_manifest_alerts_silent.bat (no console window)
- Icon: resources/icon.ico (professional branding)

CONFIGURATION MANAGEMENT
========================

DATA STORAGE OPTIONS:
1. Local Storage: app_data/config.json (single PC)
2. Network Share: \\server\share\manifest_data\config.json (multi-PC)
3. Cloud Sync: G:\My Drive\manifest_data\config.json (Google Drive)

SETTINGS MANAGEMENT:
- Graphical settings dialog accessible from system tray
- User name configuration for accountability tracking
- Data source path configuration (local/network/cloud)
- Audio settings and voice control options
- Monitor selection and display preferences

SYNCHRONIZATION:
- Real-time acknowledgment sync across multiple PCs
- 0.5 second update intervals for immediate coordination
- Conflict resolution with timestamp-based priority
- Automatic backup and restore during updates

DEPLOYMENT CONSIDERATIONS
========================

WAREHOUSE DEPLOYMENT:
- Silent operation mode (no console windows)
- System tray background operation
- Professional Windows integration
- Automatic startup capability via Windows startup folder
- Zero-maintenance operation after initial setup

MULTI-PC COORDINATION:
- Shared folder configuration for team coordination
- User-specific acknowledgment tracking
- Real-time synchronization prevents duplicate work
- Centralized configuration management

TROUBLESHOOTING TOOLS:
- launch_diagnostic.bat for detailed status checking
- Comprehensive error messages with clear solutions
- Automatic dependency verification and repair
- Settings backup/restore functionality

VERSION HISTORY
===============

v2.0 (July 2025) - PyQt6 Migration:
- Upgraded from PyQt5 to PyQt6 for modern compatibility
- Enhanced audio system with Qt6 Multimedia
- Improved Windows integration and console suppression
- Automatic shortcut creation and management
- Updated dependencies: PyQt6 6.8.1, pywin32 310

v1.x - Previous Versions:
- PyQt5-based implementation
- Manual shortcut creation
- Basic audio functionality

SUPPORT AND MAINTENANCE
=======================

UPDATE PROCESS:
- Run same INSTALL.bat file for automatic updates
- Settings are automatically preserved during updates
- Shortcuts are refreshed to ensure functionality
- No manual intervention required

ERROR RESOLUTION:
- All error messages include specific solution steps
- launch_diagnostic.bat provides detailed system status
- Automatic dependency verification and repair
- Clear troubleshooting instructions in all error dialogs

GITHUB REPOSITORY:
- Source code: https://github.com/ropevp/manifest_alert
- Issue tracking and feature requests
- Release notes and version history
- Installation files and documentation

PRODUCTION READINESS
===================

DEPLOYMENT CHECKLIST:
âœ“ Professional UI with Windows integration
âœ“ Silent background operation (no console windows)
âœ“ Automatic shortcut creation for user accessibility
âœ“ System tray integration for minimal intrusion
âœ“ Comprehensive error handling with user-friendly messages
âœ“ Zero-maintenance operation after installation
âœ“ Multi-PC synchronization for warehouse coordination
âœ“ Professional voice announcements for alert clarity

RELIABILITY FEATURES:
âœ“ Virtual environment isolation prevents system conflicts
âœ“ Automatic dependency management with compatible versions
âœ“ Settings backup and restore during updates
âœ“ Comprehensive error recovery mechanisms
âœ“ Modern Qt6 framework for long-term compatibility

Ready for immediate warehouse deployment with professional reliability.

===============================================================
Last Updated: July 8, 2025
Version: 2.0 (PyQt6 Migration)
GitHub: https://github.com/ropevp/manifest_alert
===============================================================
